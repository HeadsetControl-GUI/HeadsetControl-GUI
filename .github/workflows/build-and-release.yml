name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release tag(e.g., 1.2.3) without starting 'v'"
        required: true
        default: "continuous"
        type: string
      prerelease:
        description: "Set as prerelease"
        required: true
        default: true
        type: boolean
      publish:
        description: "Publish release"
        required: true
        default: true
        type: boolean
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'HeadsetControl-GUI.pro'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04]
        include:
          - os: windows-latest
            os_name: windows
            architecture: x64
            shell: pwsh
            dependencies: |
              choco install zip
              Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
            build: |
              mkdir build
              cd build
              qmake ../HeadsetControl-GUI.pro CONFIG+=release
              nmake
          - os: ubuntu-22.04
            os_name: linux
            architecture: x64
            shell: bash
            dependencies: |
              sudo apt-get update
              sudo apt-get install -y zip libfuse2
            build: |
              mkdir build
              cd build
              qmake ../HeadsetControl-GUI.pro CONFIG+=release
              make -j$(nproc)
    steps:
      - uses: actions/checkout@v4
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.9.0"
          add-tools-to-path: true
          cache: true
          host: ${{ matrix.os_name }}

      - name: Install dependencies
        run: ${{ matrix.dependencies }}

      - uses: TheMrMilchmann/setup-msvc-dev@v3
        if: matrix.os_name == 'windows'
        with:
          arch: ${{ matrix.architecture }}

      - name: Build
        run: ${{ matrix.build }}

      - name: Deploy Qt Windows
        if: matrix.os_name == 'windows'
        run: |
          Get-ChildItem -Path build/ -Include *.cpp, *.h, *.obj, *.res, *.qrc, *.qm -Recurse | Remove-Item -Force
          Invoke-WebRequest -Uri "https://github.com/Sapd/HeadsetControl/releases/download/continuous/headsetcontrol-windows-x86_64.zip" -OutFile headsetcontrol-windows.zip
          Expand-Archive -Path headsetcontrol-windows.zip -DestinationPath build/release/
          windeployqt6 --exclude-plugins qsvgicon,qsvg,qico,qjpeg,qgif,qnetworklistmanager,qtuiotouchplugin --no-opengl-sw --no-system-dxc-compiler --no-compiler-runtime --no-translations --no-system-d3d-compiler build/release/HeadsetControl-GUI.exe
          
      - name: Deploy Qt
        if: matrix.os_name == 'linux'
        run: |
          curl -L https://github.com/Sapd/HeadsetControl/releases/download/continuous/headsetcontrol-linux-x86_64.zip -o headsetcontrol-linux-x86_64.zip
          unzip -o headsetcontrol-linux-x86_64.zip -d build/release/
          
      - name: Deploy Appimage
        if: matrix.os_name == 'linux'
        run: |
          wget https://github.com/Sapd/HeadsetControl/releases/download/continuous/headsetcontrol-linux-x86_64.zip
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage

          chmod +x linuxdeployqt-continuous-x86_64.AppImage

          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications

          cp build/HeadsetControl-GUI AppDir/usr/bin/
          cp build/release/headsetcontrol AppDir/usr/bin/
          cp HeadsetControl-GUI.png AppDir/

          echo "[Desktop Entry]
          Type=Application
          Name=HeadsetControl-GUI
          Comment=HeadsetControl-GUI
          Exec=HeadsetControl-GUI
          Icon=HeadsetControl-GUI
          Categories=Utility;" > AppDir/usr/share/applications/HeadsetControl-GUI.desktop

          ./linuxdeployqt-continuous-x86_64.AppImage AppDir/usr/share/applications/HeadsetControl-GUI.desktop -appimage -extra-plugins=platformthemes,wayland

          appimage_file=$(ls HeadsetControl-GUI-*-x86_64.AppImage | head -n 1)
          mv "$appimage_file" "HeadsetControl-GUI_${{ matrix.os_name }}_${{ matrix.architecture }}.AppImage"

      - name: zip binaries folder
        run: |
          cd build/release/
          zip -r ../../HeadsetControl-GUI_${{ matrix.os_name }}_${{ matrix.architecture }}.zip .
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: HeadsetControl-GUI_${{ matrix.os_name }}_${{ matrix.architecture }}
          path: HeadsetControl-GUI_${{ matrix.os_name }}_${{ matrix.architecture }}.zip

      - name: Upload AppImage
        if: matrix.os_name == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: HeadsetControl-GUI_${{ matrix.os_name }}_${{ matrix.architecture }}.AppImage
          path: HeadsetControl-GUI_${{ matrix.os_name }}_${{ matrix.architecture }}.AppImage

  create-release:
    if: ${{ inputs.publish }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - name: Download Artifact
          uses: actions/download-artifact@v4
          with:
            merge-multiple: true
        - name: Deploy continuous
          uses: crowbarmaster/GH-Automatic-Releases@latest
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            automatic_release_tag: ${{ inputs.version }}
            prerelease: ${{ startsWith(github.ref, 'refs/tags/continuous') || inputs.prerelease }}
            title: Release ${{ inputs.version }}
            generate_notes: true
            files: |
              HeadsetControl-GUI_*
            body: |
              ## Contributor
              @nicola02nb Mantainer
  
              ## Credits
              @Sapd for [HeadsetControl](https://github.com/Sapd/HeadsetControl)

  winget-release:
    if: ${{ inputs.publish && !(startsWith(github.ref, 'refs/tags/continuous') || inputs.prerelease) }}
    needs: [create-release]
    runs-on: windows-latest
    continue-on-error: true
    steps:
    - name: Submit package to Windows Package Manager Community Repository
      run: |
        # Download latest wingetcreate
        Invoke-WebRequest https://aka.ms/wingetcreate/latest -OutFile wingetcreate.exe
        
        $packageId = "LeoKlaus.HeadsetControl-GUI"
        $installerUrl = "https://github.com/LeoKlaus/HeadsetControl-GUI/releases/download/${{ inputs.version }}/HeadsetControl_${{ inputs.version }}_windows_x64.zip"

        # Submit package update
        .\wingetcreate.exe update "$packageId" `
          --version "${{ inputs.version }}" `
          --urls "$installerUrl" `
          --submit `
          --token "${{ secrets.WINGET_DEPLOY_TOKEN}}"
      shell: pwsh
